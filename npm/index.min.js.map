{"version":3,"file":"index.min.js","sources":["../src/vanic/diff.js","../src/vanic/index.js"],"sourcesContent":["// CREDIT & ORIGINAL: https://gomakethings.com/dom-diffing-with-vanilla-js\n// Add diff attribute\nfunction getNodeType(node) {\n  if (node.nodeType === 3) return \"text\";\n  if (node.nodeType === 8) return \"comment\";\n  return node.tagName.toLowerCase();\n}\nfunction getAttr(node, attr) {\n  return node.getAttribute(attr);\n}\nfunction getNodeContent(node, attr) {\n  if (attr) {\n    if (attr === \"href\" || attr === \"van-link\" || attr.startsWith(\"c-\"))\n      return getAttr(node, attr);\n    if (typeof node[attr] !== \"string\") return getAttr(node, attr);\n    return node[attr];\n  }\n  if (node.childNodes && node.childNodes.length > 0) return null;\n  return node.textContent;\n}\nexport function diff(template, elem) {\n  const domNodes = Array.prototype.slice.call(elem.childNodes);\n  const templateNodes = Array.prototype.slice.call(template.childNodes);\n  let count = domNodes.length - templateNodes.length;\n  if (count > 0) {\n    for (; count > 0; count--) {\n      domNodes[domNodes.length - count].parentNode.removeChild(\n        domNodes[domNodes.length - count]\n      );\n    }\n  }\n  templateNodes.forEach(function (node, index) {\n    if (!domNodes[index]) {\n      elem.appendChild(node.cloneNode(true));\n      return;\n    }\n    const type = getNodeType(node);\n    const domType = getNodeType(domNodes[index]);\n    if (type !== domType) {\n      domNodes[index].parentNode.replaceChild(\n        node.cloneNode(true),\n        domNodes[index]\n      );\n      return;\n    }\n    if (node.attributes && node.attributes.length) {\n      let i = 0;\n      const len = node.attributes.length;\n      while (i < len) {\n        const attr = node.attributes[i];\n        if (attr.name) {\n          const tpl = getNodeContent(node, attr.name) || \"\";\n          const tplDom = getNodeContent(domNodes[index], attr.name) || \"\";\n          if (tpl !== tplDom) {\n            let nm = attr.name;\n            if (nm.startsWith(\"class\")) nm = \"className\";\n            if (nm.endsWith(\"for\")) nm = \"htmlFor\";\n            if (nm.startsWith(\"c-\")) {\n              domNodes[index].setAttribute(nm, tpl);\n            } else {\n              domNodes[index][nm] = tpl;\n            }\n          }\n        }\n        i++;\n      }\n    }\n    const templateContent = getNodeContent(node);\n    if (\n      templateContent &&\n      templateContent !== getNodeContent(domNodes[index])\n    ) {\n      domNodes[index].textContent = templateContent;\n    }\n    if (domNodes[index].childNodes.length > 0 && node.childNodes.length < 1) {\n      domNodes[index].innerHTML = \"\";\n      return;\n    }\n    if (domNodes[index].childNodes.length < 1 && node.childNodes.length > 0) {\n      const fragment = document.createDocumentFragment();\n      diff(node, fragment);\n      domNodes[index].appendChild(fragment);\n      return;\n    }\n    if (node.childNodes.length > 0) {\n      diff(node, domNodes[index]);\n    }\n  });\n}\n","import { diff } from \"./diff.js\";\n\nlet reRender;\nlet reElem;\nlet fno = [];\nlet rep = {};\nlet idx = 0;\nlet sid = 0;\nlet hooks = [];\nlet cleans = [];\n\nconst styleToString = (style) => {\n  return Object.keys(style).reduce(\n    (acc, key) =>\n      acc +\n      key\n        .split(/(?=[A-Z])/)\n        .join(\"-\")\n        .toLowerCase() +\n      \":\" +\n      style[key] +\n      \";\",\n    \"\"\n  );\n};\n\nfunction _render(fn) {\n  const res = fn();\n  reRender = fn;\n  const elem = document.createElement(\"div\");\n  elem.innerHTML = res;\n  diff(elem, reElem);\n  let i = fno.length;\n  while (i--) {\n    const { key, value } = fno[i];\n    const $ = document.querySelector(`[c-${(typeof value)[0]}=\"${i}\"]`);\n    if ($) {\n      if (typeof value === \"object\") {\n        for (const s in value) $[key.toLowerCase()][s] = value[s];\n      } else {\n        $[key.toLowerCase()] = value;\n      }\n    }\n  }\n  idx = 0;\n  sid = 0;\n  fno = [];\n}\n\nexport function useEffect(cb, deps) {\n  if (!reElem) return;\n  const id = sid;\n  const old = hooks[id];\n  const cc = old ? deps.some((dep, x) => !Object.is(dep, old[x])) : true;\n  hooks[id] = deps;\n  if (cleans[id]) {\n    cleans[id]();\n    cleans.splice(id, 1);\n  }\n  sid++;\n  if (cc) {\n    setTimeout(() => {\n      const fn = cb();\n      if (fn) cleans[id] = fn;\n    });\n  }\n}\n\nexport function html(ret) {\n  const subs = [].slice.call(arguments, 1);\n  return ret.reduce((start, end, no) => {\n    let val = subs[no - 1];\n    if (val === null || val === undefined) val = \"\";\n    if (Array.isArray(val)) val = val.join(\"\");\n    const type = typeof val;\n    if (type === \"function\" || type === \"boolean\" || type === \"object\") {\n      const id = `${idx++}`;\n      const arr = start.split(\" \");\n      const value = val;\n      const key = (arr[arr.length - 1] || \"\").replace(/=|\"/g, \"\");\n      const attr = `c-${type[0]}=\"${id}`;\n      fno[id] = { key, value };\n      if (type !== \"function\") rep[`${attr}\"`] = { key, value };\n      start = arr.slice(0, -1).join(\" \") + ` ${attr}`;\n      val = \"\";\n    }\n    return start + String(val) + end;\n  });\n}\n\nexport function useState(val) {\n  const id = sid;\n  sid++;\n  const def = hooks[id] === undefined ? val : hooks[id];\n  return [\n    def,\n    (newVal) => {\n      hooks[id] = typeof newVal === \"function\" ? newVal(def) : newVal;\n      _render(reRender);\n    },\n  ];\n}\n\nexport function renderToString(fn) {\n  return (typeof fn === \"string\" ? fn : fn()).replace(\n    / c-[o|f|b]=\"\\d+\"/g,\n    (a) => {\n      const obj = rep[a.substring(1)];\n      if (obj === undefined) return \"\";\n      const { key, value } = obj;\n      const type = typeof value;\n      if (type === \"object\") return ` ${key}=\"${styleToString(value)}\"`;\n      if (value === true) return ` ${key}`;\n      return \"\";\n    }\n  );\n}\n\nexport function render(fn, elem) {\n  reRender = undefined;\n  reElem = undefined;\n  fno = [];\n  idx = 0;\n  sid = 0;\n  hooks = [];\n  cleans = [];\n  reElem = elem;\n  _render(fn);\n}\n"],"names":["getNodeType","node","nodeType","tagName","toLowerCase","getNodeContent","attr","startsWith","getAttribute","childNodes","length","textContent","reRender","reElem","fno","idx","sid","hooks","cleans","_render","fn","res","elem","document","createElement","i","innerHTML","diff","template","domNodes","Array","prototype","slice","call","templateNodes","count","parentNode","removeChild","forEach","index","replaceChild","cloneNode","attributes","len","tpl","name","nm","endsWith","setAttribute","templateContent","fragment","createDocumentFragment","appendChild","key","value","$","querySelector","s","ret","subs","arguments","reduce","start","end","no","id","arr","val","type","isArray","join","split","replace","concat","String","cb","deps","old","cc","some","dep","x","Object","is","splice","setTimeout","def","undefined","newVal"],"mappings":"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"}