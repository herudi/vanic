{"version":3,"file":"index.min.js","sources":["../src/vanic/diff.js","../src/vanic/index.js"],"sourcesContent":["// CREDIT & ORIGINAL: https://gomakethings.com/dom-diffing-with-vanilla-js\n// Add diff attribute\nfunction getNodeType(node) {\n  if (node.nodeType === 3) return \"text\";\n  if (node.nodeType === 8) return \"comment\";\n  return node.tagName.toLowerCase();\n}\nfunction getAttr(node, attr) {\n  return node.getAttribute(attr);\n}\nfunction getNodeContent(node, attr) {\n  if (attr) {\n    if (attr === \"href\" || attr === \"van-link\" || attr.startsWith(\"c-\"))\n      return getAttr(node, attr);\n    if (typeof node[attr] !== \"string\") return getAttr(node, attr);\n    return node[attr];\n  }\n  if (node.childNodes && node.childNodes.length > 0) return null;\n  return node.textContent;\n}\nexport function diff(template, elem) {\n  const domNodes = Array.prototype.slice.call(elem.childNodes);\n  const templateNodes = Array.prototype.slice.call(template.childNodes);\n  let count = domNodes.length - templateNodes.length;\n  if (count > 0) {\n    for (; count > 0; count--) {\n      domNodes[domNodes.length - count].parentNode.removeChild(\n        domNodes[domNodes.length - count]\n      );\n    }\n  }\n  templateNodes.forEach(function (node, index) {\n    if (!domNodes[index]) {\n      elem.appendChild(node.cloneNode(true));\n      return;\n    }\n    const type = getNodeType(node);\n    const domType = getNodeType(domNodes[index]);\n    if (type !== domType) {\n      domNodes[index].parentNode.replaceChild(\n        node.cloneNode(true),\n        domNodes[index]\n      );\n      return;\n    }\n    if (node.attributes && node.attributes.length) {\n      let i = 0;\n      const len = node.attributes.length;\n      while (i < len) {\n        const attr = node.attributes[i];\n        if (attr.name) {\n          const tpl = getNodeContent(node, attr.name) || \"\";\n          const tplDom = getNodeContent(domNodes[index], attr.name) || \"\";\n          if (tpl !== tplDom) {\n            let nm = attr.name;\n            if (nm.startsWith(\"class\")) nm = \"className\";\n            if (nm.endsWith(\"for\")) nm = \"htmlFor\";\n            if (nm.startsWith(\"c-\")) {\n              domNodes[index].setAttribute(nm, tpl);\n            } else {\n              domNodes[index][nm] = tpl;\n            }\n          }\n        }\n        i++;\n      }\n    }\n    const templateContent = getNodeContent(node);\n    if (\n      templateContent &&\n      templateContent !== getNodeContent(domNodes[index])\n    ) {\n      domNodes[index].textContent = templateContent;\n    }\n    if (domNodes[index].childNodes.length > 0 && node.childNodes.length < 1) {\n      domNodes[index].innerHTML = \"\";\n      return;\n    }\n    if (domNodes[index].childNodes.length < 1 && node.childNodes.length > 0) {\n      const fragment = document.createDocumentFragment();\n      diff(node, fragment);\n      domNodes[index].appendChild(fragment);\n      return;\n    }\n    if (node.childNodes.length > 0) {\n      diff(node, domNodes[index]);\n    }\n  });\n}\n","import { diff } from \"./diff.js\";\n\nlet reRender;\nlet reElem;\nlet fno = [];\nlet rep = {};\nlet idx = 0;\n\n// hook var\nlet hid = 0;\nlet states = [];\nlet cleans = [];\nlet mems = [];\n\nconst styleToString = (style) => {\n  return Object.keys(style).reduce(\n    (acc, key) =>\n      acc +\n      key\n        .split(/(?=[A-Z])/)\n        .join(\"-\")\n        .toLowerCase() +\n      \":\" +\n      style[key] +\n      \";\",\n    \"\"\n  );\n};\n\nexport function _render(fn) {\n  const res = fn();\n  reRender = fn;\n  const elem = document.createElement(\"div\");\n  elem.innerHTML = res;\n  diff(elem, reElem);\n  let i = fno.length;\n  while (i--) {\n    const { key, value } = fno[i];\n    const $ = document.querySelector(`[c-${(typeof value)[0]}=\"${i}\"]`);\n    if ($) {\n      if (typeof value === \"object\") {\n        for (const s in value) $[key.toLowerCase()][s] = value[s];\n      } else {\n        $[key.toLowerCase()] = value;\n      }\n    }\n  }\n  hid = 0;\n  idx = 0;\n  fno = [];\n}\n\nexport function html(ret) {\n  const subs = [].slice.call(arguments, 1);\n  return ret.reduce((start, end, no) => {\n    let val = subs[no - 1];\n    if (val === null || val === undefined) val = \"\";\n    if (Array.isArray(val)) val = val.join(\"\");\n    const type = typeof val;\n    if (type === \"function\" || type === \"boolean\" || type === \"object\") {\n      const arr = start.match(/[^ ]+/g);\n      const value = val;\n      const key = (arr[arr.length - 1] || \"\").replace(/=|\"/g, \"\");\n      const id = idx;\n      const attr = `c-${type[0]}=\"${id}`;\n      fno[id] = { key, value };\n      if (type !== \"function\") rep[`${attr}\"`] = { key, value };\n      start = arr.slice(0, -1).join(\" \") + ` ${attr}`;\n      val = \"\";\n      idx++;\n    }\n    return start + String(val) + end;\n  });\n}\n\nexport function renderToString(fn) {\n  return (typeof fn === \"string\" ? fn : fn()).replace(\n    / c-[o|f|b]=\"\\d+\"/g,\n    (a) => {\n      const obj = rep[a.substring(1)];\n      if (obj === undefined) return \"\";\n      const { key, value } = obj;\n      const type = typeof value;\n      if (type === \"object\") return ` ${key}=\"${styleToString(value)}\"`;\n      if (value === true) return ` ${key}`;\n      return \"\";\n    }\n  );\n}\n\nexport function render(fn, elem) {\n  reRender = undefined;\n  fno = [];\n  idx = 0;\n  reElem = elem;\n  hid = 0;\n  states = [];\n  cleans = [];\n  mems = [];\n  _render(fn);\n}\n\nfunction hasChange(id, deps) {\n  const hook = states[id];\n  const cc = hook ? deps.some((dep, x) => !Object.is(dep, hook[x])) : true;\n  states[id] = deps;\n  return cc;\n}\n\n// useState\nexport function useState(val) {\n  const id = hid;\n  hid++;\n  const def = states[id] === undefined ? val : states[id];\n  return [\n    def,\n    (newVal) => {\n      states[id] = typeof newVal === \"function\" ? newVal(def) : newVal;\n      _render(reRender);\n    },\n  ];\n}\n\n// useEffect\nexport function useEffect(cb, deps) {\n  if (!reElem) return;\n  const id = hid;\n  const cc = hasChange(id, deps);\n  if (cleans[id]) {\n    cleans[id]();\n    cleans.splice(id, 1);\n  }\n  hid++;\n  if (cc) {\n    setTimeout(() => {\n      const fn = cb();\n      if (fn) cleans[id] = fn;\n    });\n  }\n}\n\n// useReducer\nexport function useReducer(reducer, init, initLazy) {\n  const arr = useState(initLazy !== undefined ? initLazy(init) : init);\n  return [\n    arr[0],\n    (action) => {\n      arr[1](reducer(arr[0], action));\n    },\n  ];\n}\n\n// useMemo\nexport function useMemo(fn, deps) {\n  if (!reElem) return fn();\n  const id = hid;\n  const cc = hasChange(id, deps);\n  if (cc) mems[id] = fn();\n  hid++;\n  return mems[id] || fn();\n}\n\n// useCallback\nexport const useCallback = (cb, deps) => useMemo(() => (p) => cb(p), deps);\n\n// useRef\nexport const useRef = (current) => useMemo(() => ({ current }), []);\n\n// createContext\nexport const createContext = (init) => {\n  return {\n    val: undefined,\n    Provider(value, fn) {\n      this.val = value || init;\n      return fn();\n    },\n    v() {\n      return this.val;\n    },\n  };\n};\n\n// useContext\nexport const useContext = (ctx) => {\n  return ctx.v();\n};\n"],"names":["getNodeType","node","nodeType","tagName","toLowerCase","getNodeContent","attr","startsWith","getAttribute","childNodes","length","textContent","reRender","reElem","fno","idx","hid","states","cleans","mems","_render","fn","res","elem","document","createElement","i","innerHTML","diff","template","domNodes","Array","prototype","slice","call","templateNodes","count","parentNode","removeChild","forEach","index","replaceChild","cloneNode","attributes","len","tpl","name","nm","endsWith","setAttribute","templateContent","fragment","createDocumentFragment","appendChild","key","value","$","querySelector","concat","s","hasChange","id","deps","hook","cc","some","dep","x","Object","is","useState","val","def","undefined","newVal","useMemo","init","Provider","this","v","ret","subs","arguments","reduce","start","end","no","arr","type","isArray","join","match","replace","String","cb","p","ctx","splice","setTimeout","reducer","initLazy","action","current"],"mappings":"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"}